<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="example.training.datasource.employee.EmployeeMapper">

	<resultMap id="Employee" type="example.training.model.employee.Employee">
		<id column="employee_id"  property="id.value" />
		<result column="first_name" property="name.firstName"/>
		<result column="last_name" property="name.lastName"/>
		<result column="gender_type" property="gender"/>
		<result column="date_of_birth" property="dateOfBirth.value"/>
		<result column="department_id" property="department.id.value"/>
		<result column="department_name" property="department.name.value"/>
	</resultMap>

	<resultMap id="EmployeeId" type="example.training.model.employee.EmployeeId">
		<result column="employee_id_seq"  property="value" />
	</resultMap>


	<select id="nextId" resultMap="EmployeeId"><!--  resultMap="EmployeeId"-->
		SELECT nextval('employee.employee_id_seq') employee_id_seq;
	</select>

	<!-- id=メソッド名　resultMap=結果が入るクラス -->
	<select id = "findById" resultMap="Employee">
		SELECT
			employee_id AS employee_id,
			first_name,
			last_name,
			date_of_birth,
			gender_type,
			department.department_id AS department_id,
			department_name
		FROM
			employee.employee2
		INNER JOIN
			employee.department ON employee2.department_id=department.department_id
		WHERE
			employee2.employee_id = #{employeeId}
	</select>

	<select id="listCriteriaOf" resultMap="Employee">
		SELECT
			employee_id AS employee_id,
			first_name,
			last_name,
			date_of_birth,
			gender_type,
			department.department_id AS department_id,
			department_name
		FROM
			employee.employee2
		INNER JOIN
			employee.department ON employee2.department_id=department.department_id
		<where>
			<if test="criteria.departmentId.notEmpty">
				department.department_Id = #{criteria.departmentId.value}
			</if>
		</where>
		<choose>
			<when test="criteria.employeeIdPriority.isDesc()">
				ORDER BY employee_id DESC
			</when>
			<otherwise>
				ORDER BY employee_id ASC
			</otherwise>
		</choose>
	</select>

	<insert id="register">
		INSERT INTO employee.employee2 (
			employee_id,
			first_name,
			last_name,
			date_of_birth,
			department_id,
			gender_type)
		VALUES(
			#{employeeId.value},
			#{employee.name.firstName},
			#{employee.name.lastName},
			#{employee.dateOfBirth.value},
			#{employee.department.id.value},
			#{employee.gender})
	</insert>

	<update id="modify">
		UPDATE employee.employee2 SET (
			employee_id,
			first_name,
			last_name,
			date_of_birth,
			department_id,
			gender_type)
			=
		  	(#{employee.id.value},
		  	#{employee.name.firstName},
			#{employee.name.lastName},
			#{employee.dateOfBirth.value},
			#{employee.department.id.value},
			#{employee.gender})
		WHERE employee_id = #{employee.id.value}
	</update>

	<delete id="delete">
		DELETE FROM employee.employee2
		WHERE employee_id = #{employee.id.value}
	</delete>


</mapper>